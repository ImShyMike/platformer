[gd_scene load_steps=15 format=4 uid="uid://p752moqnqbu0"]

[ext_resource type="Texture2D" uid="uid://b3tolhq4k6oeo" path="res://player.png" id="1_7mycd"]
[ext_resource type="Texture2D" uid="uid://cvjifrpw8fxfg" path="res://tile.png" id="2_0xm2m"]
[ext_resource type="Script" uid="uid://b0ehyxqyexnhb" path="res://animatable_body_2d.gd" id="3_h2yge"]
[ext_resource type="Texture2D" uid="uid://dieaaxn111wl4" path="res://special.png" id="3_lquwl"]
[ext_resource type="Texture2D" uid="uid://b7kiacxo8dlkm" path="res://spike.png" id="4_7mycd"]
[ext_resource type="Texture2D" uid="uid://cgveiyichnl5m" path="res://refresh.png" id="5_7mycd"]

[sub_resource type="GDScript" id="GDScript_0xm2m"]
script/source = "extends CharacterBody2D

@onready var position_label = $UI/PositionLabel
@onready var velocity_line = $Line2D
@onready var latest_checkpoint = position

const SPEED = 400.0
const JUMP_VELOCITY = -550.0
const WALLJUMP_HORIZONTAL = 300.0
const WALLJUMP_BUFFER_TIME = 0.2 # 200ms
const MAX_WALLJUMPS = 2
const MAX_DOUBLEJUMPS = 1
const MAX_DASHES = 1
const WALL_DRAG = 0.25
const COYOTE_TIME := 0.15  # 150ms
const DASH_TIME := 0.15 # 150ms
const DASH_SPEED := SPEED * 4

var coyote_timer := 0.0
var walljump_buffer := 0.0
var walljump_counter := 0
var doublejump_counter := 0
var dash_counter := 0
var dash_timer := 0.0

func _ready():
	latest_checkpoint = global_position
	
	if OS.is_debug_build():
		# Set up the line appearance
		velocity_line.width = 3.0
		velocity_line.default_color = Color.RED
		velocity_line.add_point(Vector2.ZERO)
		velocity_line.add_point(Vector2.ZERO)
		velocity_line.add_point(Vector2.ZERO)

func _physics_process(delta: float) -> void:
	var direction := Input.get_axis(\"left\", \"right\")
	
	# Start dash
	if dash_counter < MAX_DASHES and Input.is_action_just_pressed(\"dash\") and (direction == sign(get_wall_normal().x) or not is_on_wall()):
		dash_counter += 1
		dash_timer = DASH_TIME

		if direction != 0:
			velocity.x = direction * DASH_SPEED

	# Add the gravity and update coyote time
	if not is_on_floor():
		coyote_timer = max(coyote_timer - delta, 0.0)
		
		if is_on_wall() and velocity.y > 0 and -direction == get_wall_normal().x:
			velocity += get_gravity() * delta * WALL_DRAG
		else:
			velocity += get_gravity() * delta
	else:
		walljump_counter = 0
		dash_counter = 0
		doublejump_counter = 0
		coyote_timer = COYOTE_TIME
	
	# Reset stuff when touching the wall
	if is_on_wall():
		dash_counter = 0

	walljump_buffer = max(walljump_buffer - delta, 0.0)
	dash_timer = max(dash_timer - delta, 0.0)
	
	# Handle jumps and walljumps
	if Input.is_action_pressed(\"jump\"):
		if is_on_wall() and Input.is_action_just_pressed(\"jump\"):
			# Walljump
			if walljump_counter < MAX_WALLJUMPS:
				velocity.x = get_wall_normal().x * WALLJUMP_HORIZONTAL
				velocity.y = JUMP_VELOCITY
				walljump_buffer = WALLJUMP_BUFFER_TIME
				walljump_counter += 1
		elif coyote_timer > 0:
			# Regular jump
			coyote_timer = 0.0
			velocity.y = JUMP_VELOCITY
		elif doublejump_counter < MAX_DOUBLEJUMPS and Input.is_action_just_pressed(\"jump\"):
			# Double jump (coyote time has priority over it)
			doublejump_counter += 1
			velocity.y = JUMP_VELOCITY

	# Handle movement
	if dash_timer <= 0:
		if walljump_buffer <= 0.0 or direction == get_wall_normal().x:
			velocity.x = move_toward(velocity.x, (direction * SPEED), 200) if direction != 0 else move_toward(velocity.x, 0, 32)
		elif walljump_buffer < 0.1:
			velocity.x = move_toward(velocity.x, 0, 32)
	elif dash_timer < 0.05 and sign(velocity.x) != direction:
		velocity.x = move_toward(velocity.x, 0, 300)
	else:
		velocity.y = 0

	move_and_slide()
	
	check_tile_collisions()
	
	if position.y >= 500:
		die()
	
	if OS.is_debug_build():
		velocity_line.set_point_position(0, velocity * 0.5 * Vector2.RIGHT)
		velocity_line.set_point_position(2, velocity * 0.5 * Vector2.DOWN)
		
		position_label.text = \"Pos: X=%.1f, Y=%.1f\" % [position.x, position.y]

func check_tile_collisions():
	# Check all collisions from the last move_and_slide()
	for i in get_slide_collision_count():
		var collision = get_slide_collision(i)
		
		if collision.get_collider() is TileMapLayer:
			var tilemap_layer = collision.get_collider() as TileMapLayer
			var collision_point = collision.get_position()
			
			# Convert collision point to tile coordinates
			var tile_pos = tilemap_layer.local_to_map(tilemap_layer.to_local(collision_point))
			var source_id = tilemap_layer.get_cell_source_id(tile_pos)
			
			if source_id == 2: # Spike
				die()
			elif source_id == 1: # Checkpoint
				var checkpoint_world_pos = tilemap_layer.to_global(tilemap_layer.map_to_local(tile_pos))
				latest_checkpoint = checkpoint_world_pos + Vector2(-86, -580)
			elif source_id == 4: # Refresh
				print(position)
				walljump_counter = 0
				dash_counter = 0
				doublejump_counter = 0

func die() -> void:
	position = latest_checkpoint
	print(\"Player hit spikes!\")
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_ig7tw"]
size = Vector2(128, 128)

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_272bh"]
resource_name = "checkpoint"
texture = ExtResource("3_lquwl")
0:0/0 = 0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_5vw27"]
resource_name = "spike"
texture = ExtResource("4_7mycd")
0:0/0 = 0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-0.899294, -6.47491, 1.07915, -6.47491, 6.47491, 8, -6.47491, 8)

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_lquwl"]
resource_name = "tile"
texture = ExtResource("2_0xm2m")
0:0/0 = 0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-8, -8, 8, -8, 8, 8, -8, 8)

[sub_resource type="TileSetAtlasSource" id="TileSetAtlasSource_kek77"]
texture = ExtResource("5_7mycd")
0:0/0 = 0
0:0/0/physics_layer_0/polygon_0/points = PackedVector2Array(-0.899294, -6.47491, 1.07915, -6.47491, 6.47491, 8, -6.47491, 8)

[sub_resource type="TileSet" id="TileSet_1bvp3"]
physics_layer_0/collision_layer = 1
physics_layer_0/collision_mask = 2
sources/1 = SubResource("TileSetAtlasSource_272bh")
sources/2 = SubResource("TileSetAtlasSource_5vw27")
sources/3 = SubResource("TileSetAtlasSource_lquwl")
sources/4 = SubResource("TileSetAtlasSource_kek77")

[sub_resource type="RectangleShape2D" id="RectangleShape2D_h2yge"]
size = Vector2(256, 64)

[node name="Node" type="Node"]

[node name="Player" type="CharacterBody2D" parent="."]
texture_filter = 1
scale = Vector2(0.45, 0.45)
collision_layer = 2
script = SubResource("GDScript_0xm2m")

[node name="Sprite2D" type="Sprite2D" parent="Player"]
texture_filter = 1
position = Vector2(192.889, 1126.22)
scale = Vector2(8, 8)
texture = ExtResource("1_7mycd")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Player"]
position = Vector2(192.889, 1126.22)
shape = SubResource("RectangleShape2D_ig7tw")

[node name="Camera2D" type="Camera2D" parent="Player"]
position = Vector2(192.889, 1126.22)
process_callback = 0
position_smoothing_enabled = true
position_smoothing_speed = 8.0

[node name="UI" type="CanvasLayer" parent="Player"]

[node name="PositionLabel" type="RichTextLabel" parent="Player/UI"]
z_index = 100
offset_left = 36.0
offset_top = 38.0
offset_right = 709.0
offset_bottom = 189.0
metadata/_edit_use_anchors_ = true

[node name="Line2D" type="Line2D" parent="Player"]
position = Vector2(192.889, 1126.22)

[node name="TileMapLayer" type="TileMapLayer" parent="."]
texture_filter = 1
scale = Vector2(4, 4)
tile_map_data = PackedByteArray("AAAAAAkAAwAAAAAAAAABAAkAAQAAAAAAAAACAAkAAwAAAAAAAAADAAkAAwAAAAAAAAAEAAkAAwAAAAAAAAAFAAkAAwAAAAAAAAAGAAkAAwAAAAAAAAAHAAkAAwAAAAAAAAAIAAkAAwAAAAAAAAAJAAkAAwAAAAAAAAAKAAkAAwAAAAAAAAALAAcAAwAAAAAAAAALAAgAAwAAAAAAAAALAAkAAwAAAAAAAAAMAAcAAwAAAAAAAAANAAcAAwAAAAAAAAAOAAcAAwAAAAAAAAAPAAcAAwAAAAAAAAAQAAcAAwAAAAAAAAARAAcAAwAAAAAAAAAIAAsAAwAAAAAAAAAJAAsAAwAAAAAAAAAKAAsAAwAAAAAAAAALAAsAAwAAAAAAAAAMAAsAAwAAAAAAAAANAAsAAwAAAAAAAAANAAoAAwAAAAAAAAANAAkAAwAAAAAAAAAOAAkAAwAAAAAAAAAPAAkAAwAAAAAAAAAQAAkAAwAAAAAAAAAQAAsAAwAAAAAAAAARAAsAAwAAAAAAAAASAAsAAwAAAAAAAAATAAsAAwAAAAAAAAAUAAsAAwAAAAAAAAATAAkAAwAAAAAAAAAUAAcAAwAAAAAAAAAUAAgAAwAAAAAAAAAUAAkAAwAAAAAAAAAUAAoAAwAAAAAAAAAUAAYAAwAAAAAAAAAUAAUAAwAAAAAAAAAVAAUAAwAAAAAAAAAWAAUAAwAAAAAAAAAXAAUAAwAAAAAAAAAYAAUAAwAAAAAAAAAZAAUAAwAAAAAAAAAaAAcAAwAAAAAAAAAZAAkAAwAAAAAAAAAXAAsAAwAAAAAAAAAVAA4AAwAAAAAAAAAUAA4AAwAAAAAAAAATAA4AAwAAAAAAAAASAA4AAwAAAAAAAAARAA4AAwAAAAAAAAAQAA4AAwAAAAAAAAAPAA4AAwAAAAAAAAAOAA4AAwAAAAAAAAANAA4AAwAAAAAAAAAMAA4AAwAAAAAAAAALAA4AAwAAAAAAAAAKAA4AAwAAAAAAAAAJAA4AAwAAAAAAAAAIAA4AAwAAAAAAAAAHAA4AAwAAAAAAAAAGAA4AAwAAAAAAAAAFAA4AAwAAAAAAAAAEAA4AAwAAAAAAAAADAA4AAwAAAAAAAAACAA4AAwAAAAAAAAABAA4AAwAAAAAAAAAAAA4AAwAAAAAAAAAXAAwAAwAAAAAAAAAYAAoAAwAAAAAA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AAA5AO7/AgAAAAAAAAA6AO7/AgAAAAAAAAA7AO7/AgAAAAAAAAA8AO7/AgAAAAAAAAA9AO7/AgAAAAAAAAA+AO7/AgAAAAAAAAA7APL/AgAAAAAAAAA/AO7/AgAAAAAAAABAAO7/AgAAAAAAAAA/AO//AwAAAAAAAABAAO//AwAAAAAAAAA1AO//AwAAAAAAAAA0AO//AwAAAAAAAABYAOP/AwAAAAAAAABYAOT/AwAAAAAAAABYAOX/AwAAAAAAAABYAOb/AwAAAAAAAABYAOf/AwAAAAAAAABYAOj/AwAAAAAAAABYAOn/AwAAAAAAAABYAOr/AwAAAAAAAABYAOv/AwAAAAAAAABYAOz/AwAAAAAAAABYAO3/AwAAAAAAAABYAO7/AwAAAAAAAABYAO//AwAAAAAAAABYAPD/AwAAAAAAAABYAPH/AwAAAAAAAABYAPL/AwAAAAAAAABYAPP/AwAAAAAAAABYAPT/AwAAAAAAAABYAPX/AwAAAAAAAABYAPb/AwAAAAAAAABYAPf/AwAAAAAAAABYAPj/AwAAAAAAAABYAPn/AwAAAAAAAABYAPr/AwAAAAAAAABYAPv/AwAAAAAAAABYAPz/AwAAAAAAAABYAP3/AwAAAAAAAABYAP7/AwAAAAAAAABYAP//AwAAAAAAAABYAAAAAwAAAAAAAABYAAEAAwAAAAAAAABYAAIAAwAAAAAAAABYAAMAAwAAAAAAAABYAAQAAwAAAAAAAABYAAUAAwAAAAAAAABjAOP/AwAAAAAAAABjAOT/AwAAAAAAAABjAOX/AwAAAAAAAABjAOb/AwAAAAAAAABjAOf/AwAAAAAAAABjAOj/AwAAAAAAAABjAOn/AwAAAAAAAABjAOr/AwAAAAAAAABjAOv/AwAAAAAAAABjAOz/AwAAAAAAAABjAO3/AwAAAAAAAABjAO7/AwAAAAAAAABjAO//AwAAAAAAAABjAPD/AwAAAAAAAABjAPH/AwAAAAAAAABjAPL/AwAAAAAAAABjAPP/AwAAAAAAAABjAPT/AwAAAAAAAABjAPX/AwAAAAAAAABjAPb/AwAAAAAAAABjAPf/AwAAAAAAAABjAPj/AwAAAAAAAABjAPn/AwAAAAAAAABjAPr/AwAAAAAAAABjAPv/AwAAAAAAAABjAPz/AwAAAAAAAABjAP3/AwAAAAAAAABjAP7/AwAAAAAAAABjAP//AwAAAAAAAABjAAAAAwAAAAAAAABjAAEAAwAAAAAAAABjAAIAAwAAAAAAAABjAAMAAwAAAAAAAABjAAQAAwAAAAAAAABjAAUAAwAAAAAAAABjAAYAAwAAAAAAAABiAAYAAwAAAAAAAABhAAYAAwAAAAAAAABgAAYAAwAAAAAAAABfAAYAAwAAAAAAAABeAAYAAwAAAAAAAABdAAYAAwAAAAAAAABcAAYAAwAAAAAAAABbAAYAAwAAAAAAAABaAAYAAwAAAAAAAABZAAYAAwAAAAAAAABYAAYAAwAAAAAAAABjAOL/AgAAAAAAAABaAOb/AgAAAAAAAABbAOb/AgAAAAAAAABgAOj/AgAAAAAAAABhAOj/AgAAAAAAAABbAOv/AgAAAAAAAABcAOv/AgAAAAAAAABdAOv/AgAAAAAAAABeAPD/AgAAAAAAAABfAPD/AgAAAAAAAABgAPD/AgAAAAAAAABhAPD/AgAAAAAAAABaAPL/AgAAAAAAAABdAPX/AgAAAAAAAABeAPX/AgAAAAAAAABaAPn/AgAAAAAAAABdAPn/AgAAAAAAAABfAPv/AgAAAAAAAABbAAAAAgAAAAAAAABcAAAAAgAAAAAAAABdAAAAAgAAAAAAAABbAAEAAwAAAAAAAABcAAEAAwAAAAAAAABdAAEAAwAAAAAAAABfAPz/AwAAAAAAAABaAPr/AwAAAAAAAABdAPr/AwAAAAAAAABdAPb/AwAAAAAAAABeAPb/AwAAAAAAAABaAPP/AwAAAAAAAABeAPH/AwAAAAAAAABfAPH/AwAAAAAAAABgAPH/AwAAAAAAAABhAPH/AwAAAAAAAABbAOz/AwAAAAAAAABcAOz/AwAAAAAAAABdAOz/AwAAAAAAAABaAOf/AwAAAAAAAABbAOf/AwAAAAAAAABgAOn/AwAAAAAAAABhAOn/AwAAAAAAAABfAOP/AwAAAAAAAABgAOP/AwAAAAAAAABfAOL/AgAAAAAAAABgAOL/AgAAAAAAAABZAOf/AwAAAAAAAABiAOn/AwAAAAAAAABZAPP/AwAAAAAAAABZAPL/AgAAAAAAAABZAOb/AgAAAAAAAABiAPD/AgAAAAAAAABiAPH/AwAAAAAAAABbAPr/AwAAAAAAAABbAPn/AgAAAAAAAABcAPn/AgAAAAAAAABcAPr/AwAAAAAAAABgAPz/AwAAAAAAAABgAPv/AgAAAAAAAABiAOj/AgAAAAAAAAA=")
tile_set = SubResource("TileSet_1bvp3")

[node name="Moving Platform" type="AnimatableBody2D" parent="."]
texture_filter = 1
script = ExtResource("3_h2yge")

[node name="CollisionShape2D" type="CollisionShape2D" parent="Moving Platform"]
position = Vector2(1920, 96)
shape = SubResource("RectangleShape2D_h2yge")

[node name="Icon" type="Sprite2D" parent="Moving Platform"]
position = Vector2(1920, 96)
scale = Vector2(16, 4)
texture = ExtResource("2_0xm2m")

[node name="RichTextLabel" type="RichTextLabel" parent="."]
z_index = 10
offset_left = 5885.0
offset_top = 206.0
offset_right = 6153.0
offset_bottom = 296.0
text = "Thank you finished this amazing and totally not rushed game!"
horizontal_alignment = 1

[node name="CPUParticles2D" type="CPUParticles2D" parent="."]
position = Vector2(6009, 219)
texture = ExtResource("5_7mycd")
lifetime = 0.36
emission_shape = 1
emission_sphere_radius = 128.0
gravity = Vector2(0, 400)
angular_velocity_min = -58.44
angular_velocity_max = 87.27

[node name="RichTextLabel2" type="RichTextLabel" parent="."]
offset_left = 58.0
offset_top = 406.0
offset_right = 286.0
offset_bottom = 456.0
text = "Welcome to Speedy Square! Hope you have fun :3"

[node name="RichTextLabel3" type="RichTextLabel" parent="."]
offset_left = 3517.0
offset_top = -977.0
offset_right = 3773.0
offset_bottom = -947.0
text = "You should try using your dash!"

[node name="RichTextLabel4" type="RichTextLabel" parent="."]
offset_left = 2625.0
offset_top = -86.0
offset_right = 2901.0
offset_bottom = -7.0
text = "Jump on a wall to  walljump. You have 2 of those and the green blocks refresh them!"

[node name="RichTextLabel5" type="RichTextLabel" parent="."]
offset_left = 1397.0
offset_top = 190.0
offset_right = 1711.0
offset_bottom = 230.0
text = "Try jumping again while in the air!"

[node name="RichTextLabel6" type="RichTextLabel" parent="."]
offset_left = 5548.0
offset_top = -1939.0
offset_right = 5676.0
offset_bottom = -1899.0
text = "Good luck ;)"
